services:
    # Traefik container adapted from https://docs.modernleft.org/Docker-Images/bluesky-pds#traefik
    traefik:
        image: traefik:v3.4.0
        hostname: example.com # the Traefik container should be reachable at the hostname so pdsadmin hits the Traefik container
        command:
            - --providers.docker=true
            - --providers.docker.exposedbydefault=false
            - --entrypoints.https.address=:443
            - --certificatesresolvers.default.acme.tlschallenge=true
            - --certificatesresolvers.default.acme.email=admin@example.com
            - --certificatesresolvers.default.acme.storage=/certs/acme.json
            - --providers.file.directory=/certs
            - --providers.file.watch=true
            - --providers.file.filename=/certs/traefik-dynamic.yml
            - --log.level=DEBUG
        ports:
            - "443:443"
        networks:
            - proxy
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - ./certs/traefik.crt:/certs/traefik.crt:ro
            - ./certs/traefik.key:/certs/traefik.key:ro
            - ./certs/traefik-dynamic.yml:/certs/traefik-dynamic.yml:ro

    # PDS container adapted from https://github.com/bluesky-social/pds/blob/main/compose.yaml#L17
    pds:
        image: ghcr.io/bluesky-social/pds:latest # use the latest tag from the repo
        networks:
            - proxy
        env_file:
            - ./pds/pds.env
        volumes:
            - ./pds:/pds
            - ./certs/traefik.crt:/usr/local/share/ca-certificates/traefik.crt:ro
        labels:
            traefik.enable: "true"
            traefik.http.routers.bluesky-pds-secure.entrypoints: https
            traefik.http.routers.bluesky-pds-secure.rule: HostRegexp(`{host:.+}.example.com`) || Host(`example.com`)
            traefik.http.routers.bluesky-pds-secure.priority: 50
            traefik.http.routers.bluesky-pds-secure.tls: "true"
            traefik.http.services.bluesky-pds.loadbalancer.server.scheme: http
            traefik.http.services.bluesky-pds.loadbalancer.server.port: 3000
        depends_on:
            - appview
            
    # AppView service adapted from https://github.com/bluesky-social/indigo/blob/main/cmd/fakermaker/docker-compose.yaml
    appview:
        image: ghcr.io/bluesky-social/atproto:bsky-47236325a95f75265afd87aa1b1063e257e36836
        networks:
            - proxy
        environment:
            # Required environment variables according to README https://github.com/bluesky-social/atproto/blob/main/services/bsky/README.md
            - BSKY_PUBLIC_URL=https://appview.example.com
            - BSKY_DID_PLC_URL=https://plc.directory
            - BSKY_DATAPLANE_URLS=postgres://bsky:yksb@postgres:6543/bsky_dev
            - BSKY_SERVICE_SIGNING_KEY=did:key:example
            - BSKY_ADMIN_PASSWORD=admin
            - BSKY_PORT=3000
            - BSKY_SERVER_DID=did:web:appview.example.com
            # Additional environment variables
            - NODE_ENV=development
            - DEBUG_MODE=1
            - LOG_LEVEL=info
            - LOG_ENABLED=true
            - LOG_DESTINATION=1
        command: node api.js
        labels:
            traefik.enable: "true"
            traefik.http.routers.appview-secure.entrypoints: https
            traefik.http.routers.appview-secure.rule: Host(`appview.example.com`)
            traefik.http.routers.appview-secure.priority: 100
            traefik.http.routers.appview-secure.tls: "true"
            traefik.http.services.appview.loadbalancer.server.scheme: http
            traefik.http.services.appview.loadbalancer.server.port: 3000
        depends_on:
            postgres:
                condition: service_healthy
            
    # PostgreSQL for AppView
    postgres:
        image: postgres:14.3-alpine
        environment:
            POSTGRES_USER: bsky
            POSTGRES_PASSWORD: yksb
            POSTGRES_DB: bsky_dev
        command: -p 6543
        networks:
            - proxy
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -p 6543 -U bsky"]
            interval: 3s
            timeout: 2s
            retries: 3
        volumes:
            - postgres_data:/var/lib/postgresql/data

networks:
    proxy:
        driver: bridge

volumes:
    postgres_data: